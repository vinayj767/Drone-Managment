name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: password
        ports:
          - 27017:27017
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
    
    - name: Run backend tests
      run: |
        cd backend
        npm test
      env:
        MONGODB_URI: mongodb://admin:password@localhost:27017/test_db?authSource=admin
        JWT_SECRET: test-secret
        NODE_ENV: test

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
      env:
        NEXT_PUBLIC_API_URL: http://localhost:5000/api
        NEXT_PUBLIC_WEBSOCKET_URL: http://localhost:5000

  deploy-backend:
    needs: [test-backend]
    runs-on: ubuntu-latest
    if: false  # Disabled - manual deployment via Railway CLI
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Railway
      run: echo "Deploy backend manually via Railway CLI"

  deploy-frontend:
    needs: [test-frontend]
    runs-on: ubuntu-latest
    if: false  # Disabled - manual deployment via Vercel CLI
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Vercel
      run: echo "Deploy frontend manually via Vercel CLI"